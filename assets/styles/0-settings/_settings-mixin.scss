@mixin left {
  flex: 0.3;
  @include prop("padding-inline");
}

@mixin right {
  flex: 0.7;
  @include prop("padding-inline");
}

/**
-----------------------------------------------------
FONT
-----------------------------------------------------
*/
@function pxToVw($size: 1, $breakpoint: 1440) {
  @return calc($size/$breakpoint) * 100vw;
}

@mixin font($font: "p", $i: null) {
  @include transition(font-size);

  @if ($font == "p") {
    $base-fs: 14;

    @media #{$mobile-xs} {
      font-size: pxToVw($base-fs, 390);
    }
    @media #{$mobile} {
      font-size: pxToVw($base-fs, 768);
    }
    @media #{$tablet} {
      font-size: pxToVw($base-fs, 1024);
    }
    @media #{$desktop} {
      font-size: pxToVw($base-fs, 1440);
    }
  } @else if ($font == "h1") {
    $base-fs: 28;

    @media #{$mobile-xs} {
      font-size: pxToVw(22, 390);
    }
    @media #{$mobile} {
      font-size: pxToVw($base-fs, 768);
    }
    @media #{$tablet} {
      font-size: pxToVw($base-fs, 1024);
    }
    @media #{$desktop} {
      font-size: pxToVw($base-fs, 1440);
    }
  } @else if ($font == "h2") {
    $base-fs: 22;

    @media #{$mobile-xs} {
      font-size: pxToVw($base-fs, 390);
    }
    @media #{$mobile} {
      font-size: pxToVw($base-fs, 768);
    }
    @media #{$tablet} {
      font-size: pxToVw($base-fs, 1024);
    }
    @media #{$desktop} {
      font-size: pxToVw($base-fs, 1440);
    }
  } @else if ($font == "h3") {
    $base-fs: 20;

    @media #{$mobile-xs} {
      font-size: pxToVw($base-fs, 390);
    }
    @media #{$mobile} {
      font-size: pxToVw($base-fs, 768);
    }
    @media #{$tablet} {
      font-size: pxToVw($base-fs, 1024);
    }
    @media #{$desktop} {
      font-size: pxToVw($base-fs, 1440);
    }
  } @else if ($font == "h4") {
    $base-fs: 20;
    font-weight: 500;

    @media #{$mobile-xs} {
      font-size: pxToVw($base-fs, 390);
    }
    @media #{$mobile} {
      font-size: pxToVw($base-fs, 768);
    }
    @media #{$tablet} {
      font-size: pxToVw($base-fs, 1024);
    }
    @media #{$desktop} {
      font-size: pxToVw($base-fs, 1440);
    }
  } @else if ($font == "cta") {
    $base-fs: 12;

    @media #{$mobile-xs} {
      font-size: pxToVw($base-fs, 390);
    }
    @media #{$mobile} {
      font-size: pxToVw($base-fs, 768);
    }
    @media #{$tablet} {
      font-size: pxToVw($base-fs, 1024);
    }
    @media #{$desktop} {
      font-size: pxToVw($base-fs, 1440);
    }
  } @else if ($font == "small") {
    $base-fs: 12;
    font-weight: 482;

    @media #{$mobile-xs} {
      font-size: pxToVw($base-fs, 390);
    }
    @media #{$mobile} {
      font-size: pxToVw($base-fs, 768);
    }
    @media #{$tablet} {
      font-size: pxToVw($base-fs, 1024);
    }
    @media #{$desktop} {
      font-size: pxToVw($base-fs, 1440);
    }
  } @else if ($font == "big") {
    $base-fs: 40;

    @media #{$mobile-xs} {
      font-size: pxToVw($base-fs, 390);
    }
    @media #{$mobile} {
      font-size: pxToVw($base-fs, 768);
    }
    @media #{$tablet} {
      font-size: pxToVw($base-fs, 1024);
    }
    @media #{$desktop} {
      font-size: pxToVw($base-fs, 1440);
    }
  } @else if ($font == "enormous") {
    $base-fs: 200;
    font-weight: 200;

    @media #{$mobile-xs} {
      font-size: pxToVw(100, 390);
    }
    @media #{$mobile} {
      font-size: pxToVw($base-fs, 768);
    }
    @media #{$tablet} {
      font-size: pxToVw($base-fs, 1024);
    }
    @media #{$desktop} {
      font-size: pxToVw($base-fs, 1440);
    }
  }
}

/**
-----------------------------------------------------
CUSTOM PROPERTY
-----------------------------------------------------
*/
$base-length: 30px;
@mixin prop($property, $coef: 1, $important: null) {
  @media #{$mobile-xs} {
    #{$property}: $base-length * 0.75 * $coef $important;
  }
  @media #{$mobile} {
    #{$property}: $base-length * 0.8 * $coef $important;
  }
  @media #{$tablet} {
    #{$property}: $base-length * 0.9 * $coef $important;
  }
  @media #{$desktop} {
    #{$property}: $base-length * $coef $important;
  }
}

@mixin padding($coef: 1, $important: null) {
  @include prop("padding", $coef, $important);
}
@mixin margin($coef: 1, $important: null) {
  @include prop("margin", $coef, $important);
}
@mixin gap($coef: 1, $important: null) {
  @include prop("gap", $coef, $important);
}

/**
-----------------------------------------------------
BORDER
-----------------------------------------------------
*/
$base-border-radius: 20px;
@mixin border-radius($coef: 1, $side: "all") {
  @if $side == "all" {
    @media #{$mobile-xs} {
      border-radius: $base-border-radius * 0.5 * $coef;
    }
    @media #{$mobile} {
      border-radius: $base-border-radius * 0.5 * $coef;
    }
    @media #{$tablet} {
      border-radius: $base-border-radius * 0.75 * $coef;
    }
    @media #{$desktop} {
      border-radius: $base-border-radius * $coef;
    }
  } @else if $side == "top" {
    @media #{$mobile-xs} {
      border-radius: ($base-border-radius * 0.5 * $coef)
        ($base-border-radius * $coef * 0.5) 0 0;
    }
    @media #{$mobile} {
      border-radius: ($base-border-radius * 0.5 * $coef)
        ($base-border-radius * 0.5 * $coef) 0 0;
    }
    @media #{$tablet} {
      border-radius: ($base-border-radius * 0.75 * $coef)
        ($base-border-radius * 0.75 * $coef) 0 0;
    }
    @media #{$desktop} {
      border-radius: ($base-border-radius * $coef) ($base-border-radius * $coef)
        0 0;
    }
  } @else if $side == "bottom" {
    @media #{$mobile-xs} {
      border-radius: 0 0 ($base-border-radius * $coef * 0.5)
        ($base-border-radius * $coef * 0.5);
    }
    @media #{$mobile} {
      border-radius: 0 0 ($base-border-radius * $coef * 0.5)
        ($base-border-radius * $coef * 0.5);
    }
    @media #{$tablet} {
      border-radius: 0 0 ($base-border-radius * $coef * 0.75)
        ($base-border-radius * $coef * 0.75);
    }
    @media #{$desktop} {
      border-radius: 0 0 ($base-border-radius * $coef)
        ($base-border-radius * $coef);
    }
  }
}

@mixin border($coef: 1, $color: $white) {
  border: 1px solid $color;
  @include border-radius($coef);
}

/**
-----------------------------------------------------
TRANSITION
-----------------------------------------------------
*/
@mixin transition($property: all, $duration: 0.2s, $v: ease-out) {
  transition-property: #{$property};
  transition-duration: $duration;
  transition-timing-function: $v;
}
